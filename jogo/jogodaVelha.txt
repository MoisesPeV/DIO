#include <stdio.h>
#include <stdlib.h>

#define SIZE 3

// Função para inicializar o tabuleiro com espaços vazios
void inicializarTabuleiro(char tabuleiro[SIZE][SIZE]) {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            tabuleiro[i][j] = ' ';
        }
    }
}

// Função para exibir o tabuleiro
void exibirTabuleiro(char tabuleiro[SIZE][SIZE]) {
    printf("\n");
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            printf(" %c ", tabuleiro[i][j]);
            if (j < SIZE - 1) printf("|");
        }
        printf("\n");
        if (i < SIZE - 1) printf("---|---|---\n");
    }
    printf("\n");
}

// Função para verificar se há um vencedor
char verificarVencedor(char tabuleiro[SIZE][SIZE]) {
    // Verifica linhas
    for (int i = 0; i < SIZE; i++) {
        if (tabuleiro[i][0] != ' ' && tabuleiro[i][0] == tabuleiro[i][1] && tabuleiro[i][1] == tabuleiro[i][2]) {
            return tabuleiro[i][0];
        }
    }

    // Verifica colunas
    for (int i = 0; i < SIZE; i++) {
        if (tabuleiro[0][i] != ' ' && tabuleiro[0][i] == tabuleiro[1][i] && tabuleiro[1][i] == tabuleiro[2][i]) {
            return tabuleiro[0][i];
        }
    }

    // Verifica diagonais
    if (tabuleiro[0][0] != ' ' && tabuleiro[0][0] == tabuleiro[1][1] && tabuleiro[1][1] == tabuleiro[2][2]) {
        return tabuleiro[0][0];
    }
    if (tabuleiro[0][2] != ' ' && tabuleiro[0][2] == tabuleiro[1][1] && tabuleiro[1][1] == tabuleiro[2][0]) {
        return tabuleiro[0][2];
    }

    // Nenhum vencedor
    return ' ';
}

// Função para verificar se o tabuleiro está cheio
int tabuleiroCheio(char tabuleiro[SIZE][SIZE]) {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (tabuleiro[i][j] == ' ') {
                return 0; // Ainda há espaços disponíveis
            }
        }
    }
    return 1; // Tabuleiro está cheio
}

// Função principal
int main() {
    char tabuleiro[SIZE][SIZE];
    int linha, coluna;
    char jogadorAtual = 'X';
    char vencedor = ' ';

    inicializarTabuleiro(tabuleiro);

    printf("Bem-vindo ao Jogo da Velha!\n");
    exibirTabuleiro(tabuleiro);

    while (1) {
        printf("Jogador %c, sua vez!\n", jogadorAtual);
        printf("Digite a linha (1-3) e a coluna (1-3): ");
        scanf("%d %d", &linha, &coluna);

        // Ajusta para índice 0
        linha--;
        coluna--;

        // Verifica se a posição é válida
        if (linha < 0 || linha >= SIZE || coluna < 0 || coluna >= SIZE || tabuleiro[linha][coluna] != ' ') {
            printf("Movimento inválido! Tente novamente.\n");
            continue;
        }

        // Realiza o movimento
        tabuleiro[linha][coluna] = jogadorAtual;
        exibirTabuleiro(tabuleiro);

        // Verifica se há vencedor
        vencedor = verificarVencedor(tabuleiro);
        if (vencedor != ' ') {
            printf("Parabéns! O jogador %c venceu!\n", vencedor);
            break;
        }

        // Verifica se o tabuleiro está cheio
        if (tabuleiroCheio(tabuleiro)) {
            printf("Empate! O tabuleiro está cheio.\n");
            break;
        }

        // Troca de jogador
        jogadorAtual = (jogadorAtual == 'X') ? 'O' : 'X';
    }

    printf("Fim do jogo!\n");
    return 0;
}
